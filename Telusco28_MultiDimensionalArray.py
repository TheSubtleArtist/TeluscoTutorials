# Also contains Telusco 29
# Multi-Dimensional Arrays
# "Array" does not support multi-dimensional arrays
# Requires NumPy (Numerical Python) be installed using PiP "Python Installed packages"


from numpy import *

#Methods of creating Arrays

print('Array') #Array()

arr = array([1, 2, 3, 4, 5]) #NumPy automatically interprets the array type, unlike the standard Array class
print(arr)
print(arr.dtype) #Prints the type of values stored in the array

arr2 = array([1, 2, 3, 4, 5, 6.1]) #NumPy automatically interprets the array type, unlike the standard Array class
print(arr2)
print(arr2.dtype) #Prints the type of values stored in the array

arr3 = array([1, 2, 3, 4, 5], dtype = 'S') #Assigns a data type to the array, when desired
print(arr3)
print(arr3.dtype) #Prints the type of values stored in the array

# Second method of generating an Array
print("Linspace")
arr4 = linspace(0, 16, 32)   #Creates an array from range 0-16, and breaks the array into 16 pieces in this case, the upper limit of the range is included
print(arr4)

print("ARange")
#Third method of generating an array
arr5 = arange(1, 18, 2) #Creates an array from range 0-18, and each value is generated by 2 steps
print(arr5)

#Fourth method of generating an array
print("Logspace")
arr6 = logspace(1, 40 , 5)
#The logspace() function return numbers spaced evenly on a log scale.
#Generates 5 samples in the range of 1 - 40
print(arr6)

#Zeros
print("zeroes")
arr7 = zeros(5, int)
print(arr7)

#Ones

print("zeroes")
arr8 = ones(5, int)
print(arr8)